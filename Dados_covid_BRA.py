{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPYb7h2phoPUH4zs/b5MlYO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/alvarorosaassuncao/DIO-primeiro-desafio/blob/main/Dados_covid_BRA.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "86CPP_Sp3r7x"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from urllib.request import urlretrieve\n",
        "import matplotlib.pyplot as plt\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**Importação de dados da COVID19**\n"
      ],
      "metadata": {
        "id": "QePbnhzXBQks"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_covid = pd.read_csv('/content/COVID/time_series_covid19_confirmed_global.csv')\n",
        "df_covid.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "jBgP8LBy8a8I",
        "outputId": "6b7e1355-20ad-4508-c889-0d978050d8de"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Province/State Country/Region       Lat       Long  1/22/20  1/23/20  \\\n",
              "0            NaN    Afghanistan  33.93911  67.709953        0        0   \n",
              "1            NaN        Albania  41.15330  20.168300        0        0   \n",
              "2            NaN        Algeria  28.03390   1.659600        0        0   \n",
              "3            NaN        Andorra  42.50630   1.521800        0        0   \n",
              "4            NaN         Angola -11.20270  17.873900        0        0   \n",
              "\n",
              "   1/24/20  1/25/20  1/26/20  1/27/20  ...  9/15/22  9/16/22  9/17/22  \\\n",
              "0        0        0        0        0  ...   196870   196992   197066   \n",
              "1        0        0        0        0  ...   331384   331459   331540   \n",
              "2        0        0        0        0  ...   270584   270599   270606   \n",
              "3        0        0        0        0  ...    46147    46147    46147   \n",
              "4        0        0        0        0  ...   103131   103131   103131   \n",
              "\n",
              "   9/18/22  9/19/22  9/20/22  9/21/22  9/22/22  9/23/22  9/24/22  \n",
              "0   197240   197434   197608   197788   198023   198163   198244  \n",
              "1   331583   331601   331715   331810   331861   331908   331953  \n",
              "2   270609   270612   270612   270619   270625   270631   270637  \n",
              "3    46147    46147    46147    46147    46147    46147    46147  \n",
              "4   103131   103131   103131   103131   103131   103131   103131  \n",
              "\n",
              "[5 rows x 981 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a8b43c5-5d28-4ed7-b3f0-2012bd39c7f6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Province/State</th>\n",
              "      <th>Country/Region</th>\n",
              "      <th>Lat</th>\n",
              "      <th>Long</th>\n",
              "      <th>1/22/20</th>\n",
              "      <th>1/23/20</th>\n",
              "      <th>1/24/20</th>\n",
              "      <th>1/25/20</th>\n",
              "      <th>1/26/20</th>\n",
              "      <th>1/27/20</th>\n",
              "      <th>...</th>\n",
              "      <th>9/15/22</th>\n",
              "      <th>9/16/22</th>\n",
              "      <th>9/17/22</th>\n",
              "      <th>9/18/22</th>\n",
              "      <th>9/19/22</th>\n",
              "      <th>9/20/22</th>\n",
              "      <th>9/21/22</th>\n",
              "      <th>9/22/22</th>\n",
              "      <th>9/23/22</th>\n",
              "      <th>9/24/22</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>33.93911</td>\n",
              "      <td>67.709953</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>196870</td>\n",
              "      <td>196992</td>\n",
              "      <td>197066</td>\n",
              "      <td>197240</td>\n",
              "      <td>197434</td>\n",
              "      <td>197608</td>\n",
              "      <td>197788</td>\n",
              "      <td>198023</td>\n",
              "      <td>198163</td>\n",
              "      <td>198244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Albania</td>\n",
              "      <td>41.15330</td>\n",
              "      <td>20.168300</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>331384</td>\n",
              "      <td>331459</td>\n",
              "      <td>331540</td>\n",
              "      <td>331583</td>\n",
              "      <td>331601</td>\n",
              "      <td>331715</td>\n",
              "      <td>331810</td>\n",
              "      <td>331861</td>\n",
              "      <td>331908</td>\n",
              "      <td>331953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Algeria</td>\n",
              "      <td>28.03390</td>\n",
              "      <td>1.659600</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>270584</td>\n",
              "      <td>270599</td>\n",
              "      <td>270606</td>\n",
              "      <td>270609</td>\n",
              "      <td>270612</td>\n",
              "      <td>270612</td>\n",
              "      <td>270619</td>\n",
              "      <td>270625</td>\n",
              "      <td>270631</td>\n",
              "      <td>270637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Andorra</td>\n",
              "      <td>42.50630</td>\n",
              "      <td>1.521800</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Angola</td>\n",
              "      <td>-11.20270</td>\n",
              "      <td>17.873900</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 981 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a8b43c5-5d28-4ed7-b3f0-2012bd39c7f6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7a8b43c5-5d28-4ed7-b3f0-2012bd39c7f6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7a8b43c5-5d28-4ed7-b3f0-2012bd39c7f6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_covid.drop(['Lat', 'Long'], axis=1, inplace=True)"
      ],
      "metadata": {
        "id": "ypiWTI1HKCyc"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**Limpando colunas**"
      ],
      "metadata": {
        "id": "5Iyc6pn_LaI6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_covid.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "H-LqKOL5LRDt",
        "outputId": "9d1e9017-5280-4299-ca87-180ff028e11d"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Province/State Country/Region  1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  \\\n",
              "0            NaN    Afghanistan        0        0        0        0        0   \n",
              "1            NaN        Albania        0        0        0        0        0   \n",
              "2            NaN        Algeria        0        0        0        0        0   \n",
              "3            NaN        Andorra        0        0        0        0        0   \n",
              "4            NaN         Angola        0        0        0        0        0   \n",
              "\n",
              "   1/27/20  1/28/20  1/29/20  ...  9/15/22  9/16/22  9/17/22  9/18/22  \\\n",
              "0        0        0        0  ...   196870   196992   197066   197240   \n",
              "1        0        0        0  ...   331384   331459   331540   331583   \n",
              "2        0        0        0  ...   270584   270599   270606   270609   \n",
              "3        0        0        0  ...    46147    46147    46147    46147   \n",
              "4        0        0        0  ...   103131   103131   103131   103131   \n",
              "\n",
              "   9/19/22  9/20/22  9/21/22  9/22/22  9/23/22  9/24/22  \n",
              "0   197434   197608   197788   198023   198163   198244  \n",
              "1   331601   331715   331810   331861   331908   331953  \n",
              "2   270612   270612   270619   270625   270631   270637  \n",
              "3    46147    46147    46147    46147    46147    46147  \n",
              "4   103131   103131   103131   103131   103131   103131  \n",
              "\n",
              "[5 rows x 979 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9143ec78-2ff9-4c13-9baa-4779da431d23\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Province/State</th>\n",
              "      <th>Country/Region</th>\n",
              "      <th>1/22/20</th>\n",
              "      <th>1/23/20</th>\n",
              "      <th>1/24/20</th>\n",
              "      <th>1/25/20</th>\n",
              "      <th>1/26/20</th>\n",
              "      <th>1/27/20</th>\n",
              "      <th>1/28/20</th>\n",
              "      <th>1/29/20</th>\n",
              "      <th>...</th>\n",
              "      <th>9/15/22</th>\n",
              "      <th>9/16/22</th>\n",
              "      <th>9/17/22</th>\n",
              "      <th>9/18/22</th>\n",
              "      <th>9/19/22</th>\n",
              "      <th>9/20/22</th>\n",
              "      <th>9/21/22</th>\n",
              "      <th>9/22/22</th>\n",
              "      <th>9/23/22</th>\n",
              "      <th>9/24/22</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>196870</td>\n",
              "      <td>196992</td>\n",
              "      <td>197066</td>\n",
              "      <td>197240</td>\n",
              "      <td>197434</td>\n",
              "      <td>197608</td>\n",
              "      <td>197788</td>\n",
              "      <td>198023</td>\n",
              "      <td>198163</td>\n",
              "      <td>198244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Albania</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>331384</td>\n",
              "      <td>331459</td>\n",
              "      <td>331540</td>\n",
              "      <td>331583</td>\n",
              "      <td>331601</td>\n",
              "      <td>331715</td>\n",
              "      <td>331810</td>\n",
              "      <td>331861</td>\n",
              "      <td>331908</td>\n",
              "      <td>331953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Algeria</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>270584</td>\n",
              "      <td>270599</td>\n",
              "      <td>270606</td>\n",
              "      <td>270609</td>\n",
              "      <td>270612</td>\n",
              "      <td>270612</td>\n",
              "      <td>270619</td>\n",
              "      <td>270625</td>\n",
              "      <td>270631</td>\n",
              "      <td>270637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Andorra</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>Angola</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 979 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9143ec78-2ff9-4c13-9baa-4779da431d23')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9143ec78-2ff9-4c13-9baa-4779da431d23 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9143ec78-2ff9-4c13-9baa-4779da431d23');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_country= df_covid.groupby('Country/Region').sum()"
      ],
      "metadata": {
        "id": "NO5sXNkfLrcr"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_country.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "R7FL91TyMotW",
        "outputId": "32c720cb-2479-4f17-d126-0a7bfc87a2e8"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  1/28/20  \\\n",
              "Country/Region                                                                  \n",
              "Afghanistan           0        0        0        0        0        0        0   \n",
              "Albania               0        0        0        0        0        0        0   \n",
              "Algeria               0        0        0        0        0        0        0   \n",
              "Andorra               0        0        0        0        0        0        0   \n",
              "Angola                0        0        0        0        0        0        0   \n",
              "\n",
              "                1/29/20  1/30/20  1/31/20  ...  9/15/22  9/16/22  9/17/22  \\\n",
              "Country/Region                             ...                              \n",
              "Afghanistan           0        0        0  ...   196870   196992   197066   \n",
              "Albania               0        0        0  ...   331384   331459   331540   \n",
              "Algeria               0        0        0  ...   270584   270599   270606   \n",
              "Andorra               0        0        0  ...    46147    46147    46147   \n",
              "Angola                0        0        0  ...   103131   103131   103131   \n",
              "\n",
              "                9/18/22  9/19/22  9/20/22  9/21/22  9/22/22  9/23/22  9/24/22  \n",
              "Country/Region                                                                 \n",
              "Afghanistan      197240   197434   197608   197788   198023   198163   198244  \n",
              "Albania          331583   331601   331715   331810   331861   331908   331953  \n",
              "Algeria          270609   270612   270612   270619   270625   270631   270637  \n",
              "Andorra           46147    46147    46147    46147    46147    46147    46147  \n",
              "Angola           103131   103131   103131   103131   103131   103131   103131  \n",
              "\n",
              "[5 rows x 977 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-044caef3-ffae-44bc-a648-968d72daafb9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1/22/20</th>\n",
              "      <th>1/23/20</th>\n",
              "      <th>1/24/20</th>\n",
              "      <th>1/25/20</th>\n",
              "      <th>1/26/20</th>\n",
              "      <th>1/27/20</th>\n",
              "      <th>1/28/20</th>\n",
              "      <th>1/29/20</th>\n",
              "      <th>1/30/20</th>\n",
              "      <th>1/31/20</th>\n",
              "      <th>...</th>\n",
              "      <th>9/15/22</th>\n",
              "      <th>9/16/22</th>\n",
              "      <th>9/17/22</th>\n",
              "      <th>9/18/22</th>\n",
              "      <th>9/19/22</th>\n",
              "      <th>9/20/22</th>\n",
              "      <th>9/21/22</th>\n",
              "      <th>9/22/22</th>\n",
              "      <th>9/23/22</th>\n",
              "      <th>9/24/22</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country/Region</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Afghanistan</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>196870</td>\n",
              "      <td>196992</td>\n",
              "      <td>197066</td>\n",
              "      <td>197240</td>\n",
              "      <td>197434</td>\n",
              "      <td>197608</td>\n",
              "      <td>197788</td>\n",
              "      <td>198023</td>\n",
              "      <td>198163</td>\n",
              "      <td>198244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Albania</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>331384</td>\n",
              "      <td>331459</td>\n",
              "      <td>331540</td>\n",
              "      <td>331583</td>\n",
              "      <td>331601</td>\n",
              "      <td>331715</td>\n",
              "      <td>331810</td>\n",
              "      <td>331861</td>\n",
              "      <td>331908</td>\n",
              "      <td>331953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Algeria</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>270584</td>\n",
              "      <td>270599</td>\n",
              "      <td>270606</td>\n",
              "      <td>270609</td>\n",
              "      <td>270612</td>\n",
              "      <td>270612</td>\n",
              "      <td>270619</td>\n",
              "      <td>270625</td>\n",
              "      <td>270631</td>\n",
              "      <td>270637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Andorra</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Angola</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 977 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-044caef3-ffae-44bc-a648-968d72daafb9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-044caef3-ffae-44bc-a648-968d72daafb9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-044caef3-ffae-44bc-a648-968d72daafb9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_country.loc['Brazil']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R0GDAKjjMvI8",
        "outputId": "4ff31770-fb10-4ef3-e1fc-fe623442cfab"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1/22/20           0\n",
              "1/23/20           0\n",
              "1/24/20           0\n",
              "1/25/20           0\n",
              "1/26/20           0\n",
              "             ...   \n",
              "9/20/22    34592027\n",
              "9/21/22    34592027\n",
              "9/22/22    34616655\n",
              "9/23/22    34624427\n",
              "9/24/22    34624427\n",
              "Name: Brazil, Length: 977, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "date = df_country.loc['Brazil'].index\n",
        "cases = df_country.loc['Brazil'].values"
      ],
      "metadata": {
        "id": "EfPhHIdqNR7f"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "f2lqz2_FN9W1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Numero Total de Casos no Brasil em graficos de barra**"
      ],
      "metadata": {
        "id": "wzRuWT7cN-vM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(14,8))\n",
        "plt.bar(date, cases)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 511
        },
        "id": "dpDpjronOJDX",
        "outputId": "1eafeb6b-611c-422d-99a0-c9d4e59e6355"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 977 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1008x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_country.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "QzTsrd67PZPb",
        "outputId": "c57bb8ac-b855-4350-bb01-9ffd047751fe"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                1/22/20  1/23/20  1/24/20  1/25/20  1/26/20  1/27/20  1/28/20  \\\n",
              "Country/Region                                                                  \n",
              "Afghanistan           0        0        0        0        0        0        0   \n",
              "Albania               0        0        0        0        0        0        0   \n",
              "Algeria               0        0        0        0        0        0        0   \n",
              "Andorra               0        0        0        0        0        0        0   \n",
              "Angola                0        0        0        0        0        0        0   \n",
              "\n",
              "                1/29/20  1/30/20  1/31/20  ...  9/15/22  9/16/22  9/17/22  \\\n",
              "Country/Region                             ...                              \n",
              "Afghanistan           0        0        0  ...   196870   196992   197066   \n",
              "Albania               0        0        0  ...   331384   331459   331540   \n",
              "Algeria               0        0        0  ...   270584   270599   270606   \n",
              "Andorra               0        0        0  ...    46147    46147    46147   \n",
              "Angola                0        0        0  ...   103131   103131   103131   \n",
              "\n",
              "                9/18/22  9/19/22  9/20/22  9/21/22  9/22/22  9/23/22  9/24/22  \n",
              "Country/Region                                                                 \n",
              "Afghanistan      197240   197434   197608   197788   198023   198163   198244  \n",
              "Albania          331583   331601   331715   331810   331861   331908   331953  \n",
              "Algeria          270609   270612   270612   270619   270625   270631   270637  \n",
              "Andorra           46147    46147    46147    46147    46147    46147    46147  \n",
              "Angola           103131   103131   103131   103131   103131   103131   103131  \n",
              "\n",
              "[5 rows x 977 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f9a1b1dd-21bf-454a-9540-a922fab88261\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>1/22/20</th>\n",
              "      <th>1/23/20</th>\n",
              "      <th>1/24/20</th>\n",
              "      <th>1/25/20</th>\n",
              "      <th>1/26/20</th>\n",
              "      <th>1/27/20</th>\n",
              "      <th>1/28/20</th>\n",
              "      <th>1/29/20</th>\n",
              "      <th>1/30/20</th>\n",
              "      <th>1/31/20</th>\n",
              "      <th>...</th>\n",
              "      <th>9/15/22</th>\n",
              "      <th>9/16/22</th>\n",
              "      <th>9/17/22</th>\n",
              "      <th>9/18/22</th>\n",
              "      <th>9/19/22</th>\n",
              "      <th>9/20/22</th>\n",
              "      <th>9/21/22</th>\n",
              "      <th>9/22/22</th>\n",
              "      <th>9/23/22</th>\n",
              "      <th>9/24/22</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Country/Region</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Afghanistan</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>196870</td>\n",
              "      <td>196992</td>\n",
              "      <td>197066</td>\n",
              "      <td>197240</td>\n",
              "      <td>197434</td>\n",
              "      <td>197608</td>\n",
              "      <td>197788</td>\n",
              "      <td>198023</td>\n",
              "      <td>198163</td>\n",
              "      <td>198244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Albania</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>331384</td>\n",
              "      <td>331459</td>\n",
              "      <td>331540</td>\n",
              "      <td>331583</td>\n",
              "      <td>331601</td>\n",
              "      <td>331715</td>\n",
              "      <td>331810</td>\n",
              "      <td>331861</td>\n",
              "      <td>331908</td>\n",
              "      <td>331953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Algeria</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>270584</td>\n",
              "      <td>270599</td>\n",
              "      <td>270606</td>\n",
              "      <td>270609</td>\n",
              "      <td>270612</td>\n",
              "      <td>270612</td>\n",
              "      <td>270619</td>\n",
              "      <td>270625</td>\n",
              "      <td>270631</td>\n",
              "      <td>270637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Andorra</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "      <td>46147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Angola</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "      <td>103131</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 977 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9a1b1dd-21bf-454a-9540-a922fab88261')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f9a1b1dd-21bf-454a-9540-a922fab88261 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f9a1b1dd-21bf-454a-9540-a922fab88261');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s_brazil = df_country.loc['Brazil']"
      ],
      "metadata": {
        "id": "7cu3KiHFPdrQ"
      },
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "s_brazil= s_brazil[s_brazil > 0]"
      ],
      "metadata": {
        "id": "NDNoemfOPm4x"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "s_brazil.values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tMGFPS_pP13l",
        "outputId": "70ea6a86-bace-426f-c3cd-3b7dae0df6b7"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([       1,        1,        1,        2,        2,        2,\n",
              "              2,        4,        4,       13,       13,       20,\n",
              "             25,       31,       38,       52,      151,      151,\n",
              "            162,      200,      321,      372,      621,      793,\n",
              "           1021,     1546,     1924,     2247,     2554,     2985,\n",
              "           3417,     3904,     4256,     4579,     5717,     6836,\n",
              "           8044,     9056,    10360,    11130,    12161,    14034,\n",
              "          16170,    18092,    19638,    20727,    22192,    23430,\n",
              "          25262,    28320,    30425,    33682,    36658,    38654,\n",
              "          40743,    43079,    45757,    50036,    54043,    59324,\n",
              "          63100,    67446,    73235,    79685,    87187,    92202,\n",
              "          97100,   101826,   108620,   115455,   126611,   135773,\n",
              "         146894,   156061,   162699,   169594,   178214,   190137,\n",
              "         203165,   220291,   233511,   241080,   255368,   271885,\n",
              "         294624,   312761,   334568,   351565,   366033,   378840,\n",
              "         395167,   415366,   443703,   470593,   502914,   516137,\n",
              "         531286,   562963,   589048,   621002,   653103,   676893,\n",
              "         694881,   712219,   743917,   777707,   806399,   830681,\n",
              "         851911,   868705,   893322,   930305,   961230,   986750,\n",
              "        1042809,  1106332,  1086536,  1114728,  1154255,  1195288,\n",
              "        1236752,  1281636,  1318556,  1351439,  1372989,  1412669,\n",
              "        1459494,  1503895,  1546935,  1580502,  1605695,  1630149,\n",
              "        1676848,  1722098,  1765060,  1809371,  1844318,  1867976,\n",
              "        1890869,  1933791,  1973933,  2017616,  2052234,  2077987,\n",
              "        2101399,  2124152,  2171079,  2237229,  2294555,  2351458,\n",
              "        2398993,  2421666,  2449677,  2503681,  2559132,  2617187,\n",
              "        2670451,  2711992,  2736058,  2756164,  2812447,  2868616,\n",
              "        2922605,  2972008,  3018397,  3041127,  3067633,  3118153,\n",
              "        3173107,  3233820,  3283227,  3320108,  3343114,  3367511,\n",
              "        3416775,  3465378,  3508352,  3540678,  3586586,  3608459,\n",
              "        3631972,  3678279,  3726431,  3768691,  3812779,  3850070,\n",
              "        3864604,  3914829,  3959158,  4005611,  4052420,  4091959,\n",
              "        4125816,  4140488,  4150004,  4168790,  4205877,  4246638,\n",
              "        4288171,  4318971,  4332991,  4353602,  4388154,  4425451,\n",
              "        4461856,  4501587,  4531145,  4546587,  4564222,  4599189,\n",
              "        4631915,  4663930,  4696240,  4720958,  4734745,  4751616,\n",
              "        4784464,  4817365,  4853148,  4885966,  4908974,  4917689,\n",
              "        4943742,  4975268,  5006206,  5033036,  5060769,  5084513,\n",
              "        5096704,  5105340,  5118699,  5146543,  5176969,  5205565,\n",
              "        5226341,  5238392,  5254971,  5278737,  5304593,  5329357,\n",
              "        5359358,  5384342,  5396596,  5415207,  5445189,  5473540,\n",
              "        5500240,  5524593,  5537763,  5547951,  5556200,  5570782,\n",
              "        5594098,  5617943,  5638143,  5655887,  5666389,  5679803,\n",
              "        5726227,  5752474,  5786393,  5825111,  5851389,  5865295,\n",
              "        5881039,  5916529,  5951281,  5987143,  6025913,  6056135,\n",
              "        6074061,  6092219,  6126752,  6171380,  6212265,  6245773,\n",
              "        6297258,  6318270,  6341965,  6393950,  6442425,  6492564,\n",
              "        6540235,  6580517,  6606947,  6633971,  6681767,  6736358,\n",
              "        6789908,  6842458,  6884782,  6906811,  6934191,  6982223,\n",
              "        7048347,  7117046,  7169899,  7218141,  7242625,  7270270,\n",
              "        7326935,  7372614,  7430825,  7452008,  7469541,  7487155,\n",
              "        7514592,  7570963,  7626563,  7681032,  7703971,  7719324,\n",
              "        7736514,  7761553,  7819636,  7882143,  7970112,  8029698,\n",
              "        8081091,  8110118,  8140865,  8205289,  8265116,  8333445,\n",
              "        8402542,  8460987,  8492403,  8521336,  8583485,  8647962,\n",
              "        8706912,  8763517,  8821815,  8850334,  8880864,  8942472,\n",
              "        9007244,  9068004,  9127507,  9180621,  9208521,  9237011,\n",
              "        9293289,  9347703,  9404810,  9456500,  9502810,  9528972,\n",
              "        9557558,  9608775,  9669883,  9723487,  9772429,  9817285,\n",
              "        9848008,  9873816,  9939100,  9986325, 10039804, 10091961,\n",
              "       10144332, 10173817, 10205663, 10269248, 10334634, 10402913,\n",
              "       10466308, 10524726, 10558091, 10598476, 10658171, 10731070,\n",
              "       10807092, 10879597, 10946501, 11028185, 11064770, 11136064,\n",
              "       11217531, 11294602, 11377073, 11447416, 11490864, 11535178,\n",
              "       11620823, 11709475, 11797401, 11885660, 11958814, 12006259,\n",
              "       12062229, 12147437, 12238343, 12336604, 12416950, 12498653,\n",
              "       12545611, 12588226, 12674667, 12763392, 12851165, 12920540,\n",
              "       12959895, 12992213, 13034887, 13120019, 13208715, 13297270,\n",
              "       13385380, 13451932, 13491107, 13530757, 13613418, 13688024,\n",
              "       13759207, 13843594, 13912159, 13950997, 13987519, 14060162,\n",
              "       14134150, 14182258, 14251539, 14315320, 14348961, 14381359,\n",
              "       14457203, 14534482, 14603096, 14675104, 14733396, 14762684,\n",
              "       14801673, 14871208, 14947580, 15019870, 15096714, 15158475,\n",
              "       15191195, 15227496, 15297602, 15373850, 15453880, 15531794,\n",
              "       15599145, 15636709, 15672307, 15747112, 15827375, 15910762,\n",
              "       15987393, 16055289, 16093784, 16131264, 16205305, 16285550,\n",
              "       16350081, 16403969, 16479832, 16521281, 16557888, 16636801,\n",
              "       16733079, 16809146, 16852317, 16913984, 16954327, 16994043,\n",
              "       17049756, 17134623, 17225867, 17312179, 17385952, 17422936,\n",
              "       17465628, 17552769, 17639297, 17715789, 17811233, 17889167,\n",
              "       17933754, 17979164, 18103412, 18180808, 18257432, 18332493,\n",
              "       18393158, 18425138, 18457197, 18523153, 18570296, 18631426,\n",
              "       18694998, 18748731, 18774193, 18802128, 18863811, 18917978,\n",
              "       18972125, 19030577, 19074698, 19093845, 19113078, 19161644,\n",
              "       19217741, 19272139, 19315054, 19364084, 19380831, 19397587,\n",
              "       19428736, 19484572, 19533253, 19640373, 19675021, 19693277,\n",
              "       19714719, 19758310, 19805359, 19846680, 19887058, 19922146,\n",
              "       19942499, 19961374, 19993870, 20034407, 20073891, 20116562,\n",
              "       20156095, 20169989, 20185531, 20220993, 20256436, 20292294,\n",
              "       20325289, 20354591, 20368358, 20386548, 20425554, 20465725,\n",
              "       20501738, 20535951, 20561273, 20575218, 20590872, 20622681,\n",
              "       20652660, 20683583, 20711339, 20734286, 20745549, 20758350,\n",
              "       20785196, 20810944, 20837967, 20861571, 20881896, 20894557,\n",
              "       20904729, 20918333, 20932515, 20965338, 20981793, 20995555,\n",
              "       21003416, 21012064, 21025635, 21038911, 21074358, 21109695,\n",
              "       21234573, 21243748, 21253033, 21268413, 21300996, 21325913,\n",
              "       21344578, 21358441, 21367297, 21376642, 21393526, 21410411,\n",
              "       21432362, 21450424, 21462810, 21471963, 21483481, 21505626,\n",
              "       21524172, 21538788, 21557323, 21572127, 21580539, 21587532,\n",
              "       21594887, 21603259, 21618491, 21632789, 21642550, 21648735,\n",
              "       21658054, 21671287, 21686995, 21703981, 21717379, 21729284,\n",
              "       21733820, 21741647, 21754992, 21772116, 21785802, 21798483,\n",
              "       21808495, 21814625, 21819251, 21825169, 21841479, 21854726,\n",
              "       21867724, 21878897, 21884558, 21891439, 21903249, 21918229,\n",
              "       21933767, 21948366, 21957724, 21962026, 21964769, 21971337,\n",
              "       21984449, 21995851, 22008224, 22016439, 22021527, 22025668,\n",
              "       22038108, 22050362, 22062645, 22073524, 22081833, 22085369,\n",
              "       22089858, 22100143, 22112425, 22124356, 22134978, 22142385,\n",
              "       22147078, 22153095, 22163231, 22173363, 22182116, 22189181,\n",
              "       22191865, 22193480, 22196250, 22200629, 22205707, 22209368,\n",
              "       22213731, 22216112, 22217570, 22220209, 22223943, 22227169,\n",
              "       22230943, 22234623, 22238297, 22243266, 22250218, 22259270,\n",
              "       22269031, 22281649, 22291839, 22295621, 22297427, 22309081,\n",
              "       22328252, 22351104, 22386930, 22450222, 22499525, 22529183,\n",
              "       22563104, 22636359, 22724232, 22822177, 22933289, 22981851,\n",
              "       23015128, 23089509, 23229851, 23425392, 23595178, 23766499,\n",
              "       23931609, 24054405, 24142032, 24342322, 24560093, 24789795,\n",
              "       25050601, 25256198, 25360647, 25463530, 25634781, 25820745,\n",
              "       26107894, 26326454, 26484546, 26546399, 26616014, 26793497,\n",
              "       26972914, 27135550, 27299336, 27434286, 27492904, 27552267,\n",
              "       27677468, 27819996, 27940119, 28072238, 28177367, 28218180,\n",
              "       28258458, 28361951, 28493336, 28589235, 28679671, 28749552,\n",
              "       28776794, 28796571, 28818850, 28846495, 28906672, 28978052,\n",
              "       29040800, 29056525, 29077831, 29152318, 29198101, 29259206,\n",
              "       29313228, 29361024, 29374833, 29391345, 29441039, 29488777,\n",
              "       29532810, 29584800, 29624435, 29637814, 29650082, 29691641,\n",
              "       29738362, 29775568, 29809769, 29839103, 29849740, 29857641,\n",
              "       29887191, 29920604, 29951670, 29978513, 29995575, 30002785,\n",
              "       30015357, 30042272, 30069094, 30095328, 30125540, 30146769,\n",
              "       30153979, 30161909, 30184286, 30210934, 30234024, 30247302,\n",
              "       30250077, 30252618, 30261088, 30275219, 30311969, 30330629,\n",
              "       30338697, 30345808, 30349463, 30355919, 30378061, 30399004,\n",
              "       30418920, 30433042, 30448236, 30454499, 30460997, 30482429,\n",
              "       30502501, 30524183, 30543908, 30558530, 30564536, 30574245,\n",
              "       30594388, 30617786, 30639130, 30664739, 30682094, 30688390,\n",
              "       30701900, 30701900, 30701900, 30701900, 30762413, 30762413,\n",
              "       30791220, 30803995, 30836815, 30851191, 30880512, 30921145,\n",
              "       30945384, 30953579, 30977661, 31019038, 31060017, 31101290,\n",
              "       31137479, 31137479, 31137479, 31195118, 31266163, 31315777,\n",
              "       31360850, 31417341, 31445137, 31456865, 31497038, 31541479,\n",
              "       31611769, 31611769, 31611769, 31611769, 31611769, 31754465,\n",
              "       31818827, 31890733, 31962782, 32023166, 32023166, 32023166,\n",
              "       32130316, 32206954, 32206954, 32358018, 32434063, 32471847,\n",
              "       32490422, 32535923, 32610514, 32687680, 32759730, 32830844,\n",
              "       32874501, 32896464, 32940507, 33004555, 33076779, 33142158,\n",
              "       33250117, 33290266, 33301118, 33339815, 33397814, 33454294,\n",
              "       33505727, 33555526, 33555526, 33591356, 33621965, 33659879,\n",
              "       33704393, 33748985, 33790698, 33813587, 33833900, 33855964,\n",
              "       33890428, 33924061, 33964494, 33994470, 34011173, 34018371,\n",
              "       34035780, 34066000, 34066000, 34124579, 34148131, 34148131,\n",
              "       34148131, 34178240, 34201280, 34223207, 34245374, 34264237,\n",
              "       34264237, 34264237, 34284864, 34284864, 34329600, 34350639,\n",
              "       34368909, 34368909, 34368909, 34397205, 34414011, 34429853,\n",
              "       34429853, 34456145, 34456145, 34456145, 34477539, 34477539,\n",
              "       34477539, 34477539, 34516739, 34516739, 34516739, 34533957,\n",
              "       34544377, 34558902, 34568833, 34568833, 34568833, 34568833,\n",
              "       34592163, 34592027, 34592027, 34616655, 34624427, 34624427])"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#**Numero de Casos confirmados no Brasil nos ultimos 10 dias**"
      ],
      "metadata": {
        "id": "c7hBNZ50puBY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "tam = len(s_brazil)\n",
        "plt.figure(figsize=(15,9))\n",
        "plt.xticks(rotation=60)\n",
        "plt.bar(s_brazil.index[tam-30:tam], s_brazil.values[tam-30:tam])\n",
        "plt.title('Total de casos confirmados de COVID-19 nos ultimos 10 dias')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 599
        },
        "id": "eQ7FX7SeP7RR",
        "outputId": "6686a289-c172-486b-f25a-42633b85a9c2"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Total de casos confirmados de COVID-19 nos ultimos 10 dias')"
            ]
          },
          "metadata": {},
          "execution_count": 59
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "h_s93Bk0ppb5"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}